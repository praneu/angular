{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this._url = \"/assets/data/employees.json\";\n  }\n  getEmployees() {\n    // return this.http.get<IEmployee[]>(this._url)\n    //Error handeling\n    return this.http.get(this._url).pipe(catchError(this.errorHandler));\n  }\n  errorHandler(error) {\n    return throwError(error.message || \"Server Error\");\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,MAAM;;;AAMjC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,SAAI,GAAW,6BAA6B;EAEZ;EAExCC,YAAY;IACX;IACC;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAc,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAACR,UAAU,CAAC,IAAI,CAACS,YAAY,CAAC,CAAC;EAClF;EAEAA,YAAY,CAACC,KAAyB;IACpC,OAAOT,UAAU,CAACS,KAAK,CAACC,OAAO,IAAG,cAAc,CAAC;EAEnD;;AAfWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAU,SAAfV,eAAe;EAAAW,YAFd;AAAM","names":["catchError","throwError","EmployeeService","constructor","http","getEmployees","get","_url","pipe","errorHandler","error","message","factory","providedIn"],"sourceRoot":"","sources":["C:\\Drive D\\Angular\\Angular_final\\observablesHttp\\src\\app\\employee.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IEmployee } from './employee';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private _url: string = \"/assets/data/employees.json\";\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<IEmployee[]>{\n   // return this.http.get<IEmployee[]>(this._url)\n    //Error handeling\n    return this.http.get<IEmployee[]>(this._url).pipe(catchError(this.errorHandler))\n  }   \n\n  errorHandler(error : HttpErrorResponse){\n    return throwError(error.message ||\"Server Error\");\n    \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}